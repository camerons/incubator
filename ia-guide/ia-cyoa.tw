::StoryIFID[twee2]
Twee2::build_config.story_ifid = '5a7d6282-c043-49f6-872b-6518cf0391b6'

:: Start
userName: ' '
--

# Information Architecture

**[[Let's Start->Intro]]**

:: Intro
Let's go on an adventure into another world.
This world is not entirely different to your own, but it might have some unexpected treasures - and pitfalls - for you to find.
It's an adventure into the mind of your reader.
They live in your world, but they don't always think like you.
And learning to think like a reader can be tricky!

Have you ever been really good at something, and tried to show someone else how to do it?
It can be frustrating, because they just don't seem to get it, even though it seems easy and straight forward to you.
The technical name for this is the Curse of Knowledge, and it's what makes writing documentation hard.
Science tells us that the more you know about something, the less able you are to imagine what it's like not to know it.

Writers combat the Curse of Knowledge by putting themselves in the shoes of the reader.
And while this guide probably won't teach you to be a professional technical writer, it will definitely help you think about your reader, so that you can write better documentation.
It's a bit like having a writer in your pocket, giving you some hints and tips before you set out to start writing.

This guide is interactive, just click the option you like the most to move on.
It isn't a test!
You can't fail!
Just follow the prompts, and let us guide you into ...

the world of the reader ...

**[[Continue->Before you begin]]**

:: Before you begin
When you're excited about a new project, it's super-tempting to just start writing the docs without thinking too hard about it.
DON'T DO THIS!

This guide is designed to get you thinking about your readers in such a way that you'll end up knowing what docs you need to write.
It won't take very long for you to get through this guide, and it will save you time in the long run.

By the end, you should have a good idea of who your main readers are, the kinds of things they are using your docs for, and what kinds of docs they might be expecting.
This will help you know which templates to use from the Good Docs Project, and give you the basics to start completing them.

If you don't want to do this using the interactive tool, you can [[click here]] to go to the static text.
Just have a piece of paper handy to write down the answers to the questions as you go.

Or, tell me your name:

{text input for: userName}

and we can [[get started->What are you writing about]]


:: What are you writing about

name: {userName}
--
Hi {username}! I'm so glad you decided to join me!

The first thing we need to do is think about what you're writing about.
Are you writing about something pretty simple, that people can use without having any experience? Like a toaster?
Or are you writing about something a bit complicated, that people can start to use only after they've done a bit of reading, and might need to ask some questions as they go along? More like a car?
Or are you writing about something really tricky? Something that needs people to have a training course, a whole lot of background knowledge, and possibly a friend to help them the whole way? Like a nuclear reactor?

> [[Toaster->Writing about a toaster]]
> [[Car->Writing about a car]]
> [[Nuclear Reactor->Writing about a nuclear reactor]]


:: Writing about a toaster
Because the thing you are writing about is pretty simple and straightforward, you're probably thinking you don't need to spend much time writing docs.
Just because you might not need a lot of docs, you will still need something, though.
And working out what you need could be even more difficult, because you're going to need to think a little bit harder about who you're writing for.


**Curse of Knowledge alert!!**
Just because your toaster seems super simple to you, doesn't mean everyone will find it as easy as you do.
What if your reader doesn't speak the same language, or is a new migrant from a place with a totally different culture?
What if they are nine years old?
Or 99 years old?
What if they have a physical or mental disability?
When you are thinking about your readers, make sure you are thinking about everyone, not just people like you.

Now, let's [[move on->Who are you writing for?]]


:: Writing about a car
You lucky thing!
There is a pretty good chance that you needed to learn how to do this thing yourself, and hopefully it wasn't all that long ago, and you can fairly easily cast your mind back to those days when you didn't know what this thing was, or how it worked.
And if you didn't have to do this yourself, hopefully there is someone nearby who has, so go ask them questions!

**Curse of Knowledge alert!!**
Try to remember that not everyone knows the same stuff, or learns in the same way.
What if your reader doesn't speak the same language, or is a new migrant from a place with a totally different culture?
What if they are nine years old?
Or 99 years old?
What if they have a physical or mental disability?
When you are thinking about your readers, make sure you are thinking about everyone, not just people like you.

Now, let's [[move on->Who are you writing for?]]


:: Writing about a nuclear reactor
The first thing to work out if you are writing about a nuclear reactor is what reasonable assumptions can you make?
There's a fair chance that you can assume at least some kind of prior knowledge: a degree, some relevant experience, or perhaps using some other related tools or software.
When you have made these assumptions, write them down!
Put them right up front in your docs, so your readers can go away and learn something else first if they need to.
And be prepared to be challenged: you might discover in time that your assumptions are incorrect, and if that happens, you'll need to revisit your docs, too.


**Curse of Knowledge alert!!**
Try to remember that not everyone knows the same stuff, or learns in the same way.
What if your reader doesn't speak the same language, or is a new migrant from a place with a totally different culture?
What if they are nine years old?
Or 99 years old?
What if they have a physical or mental disability?
When you are thinking about your readers, make sure you are thinking about everyone, not just people like you.

Now, let's [[move on->Who are you writing for?]]


:: Who are you writing for?
readerName1: 'Alex'
readerName2: 'Bobbi'
readerName3: 'Charlie'
--
Now that we've thought what you're writing about, let's consider who you're writing for.
It would be easy to think of just one person that you're writing for, but we need to remember that people come in all shapes and sizes.
So let's think up three different people, to try and make sure we're covering all the options.

The way you categorize your three readers is up to you, but sometimes the best way to start is by thinking of a beginner, an intermediate reader, and an expert.
Or, depending on the kind of product you have, you might think of an ordinary user, a system administrator, and a support person.

Whichever you decide, your three readers should probably be interested in different parts of your product, they will be trying to do different tasks, and they will need different levels of help from your docs.
Don't be afraid to let them overlap a little bit, but try and make sure you've covered most of the options.

To get started with understanding your readers, you should probably give them names.
What would you like to call your first reader?

{text input for: readerName1}

What would you like to call your second reader?

{text input for: readerName2}

What would you like to call your third reader?

{text input for: readerName3}

Let's take a closer look at our readers, and work out [[Why do they read the docs?]]


:: Why do they read the docs?
readerName1: 'readerName1'
readerName2: 'readerName2'
readerName3: 'readerName3'
--

I'm going to tell you a secret.

People don't read the docs because they're a great read.

I know it's shocking, but literally no one is curling up at night with a warm drink and a great technical manual.

If that's the case, why *do* people read docs?
Generally speaking, it's because they want to achieve something.
There's an anecdote that people don't go to the hardware store to buy a drill because they want a drill.
You buy a drill because you need a hole.
Your job as a writer is to work out why they need a hole, and give them the information they need to work out what tools to use to achieve it.

To put that in less abstract terms, you need to work out what problem your reader is trying to solve.
If Dusty needs to hang a picture, they might want to consult some documentation about the various ways they can go about that.
The documentation Dusty needs to do this would probably not be called "How to Choose to Drill".
The documentation Dusty needs is "How to Hang a Picture".
This is an important distinction, because if you get it wrong, your readers won't know if the content is right for them or, worse, they won't find your content at all.

So let's think about what our readers are trying to achieve.
Which one would you like to start with?

> [[Reader One->Reader One]]
> [[Reader Two->Reader Two]]
> [[Reader Three->Reader Three]]

When you've got tasks for all of your readers, let's put it all together, and think about [[Writing for your readers->Writing for your readers]]


:: Reader One
reader1action1: 'Install the product'
reader1action2: 'Perform initial setup'
reader1action3: 'Start their first project'
--

To understand {readerName1}, let's start by thinking about how they might begin.
What is the very first thing that {readerName1} might want to do?

{text input for: reader1action1}

Now let's assume that {readerName1} manages to complete {reader1action1} without any trouble.
What would be the second thing that they would want to do?

{text input for: reader1action2}

And now that they've managed to complete {reader1action2} what is the next thing?

{text input for: reader1action3}

Great! Now you have the three main things that a reader like {readerName1} might want to do, [[go back->Why do they read the docs?]] and do the same for {readerName2} and {readerName3}.
Or, if you're done, move on to [[Writing for your readers->Writing for your readers]]


:: Reader Two
reader2action1: 'Configure multiple users'
reader2action2: 'Troubleshoot networking problems'
reader2action3: 'Upgrade to a new version'
--

To understand {readerName2}, let's start by thinking about how they might begin.
What is the very first thing that {readerName2} might want to do?

{text input for: reader2action1}

Now let's assume that {readerName2} manages to complete {reader2action1} without any trouble.
What would be the second thing that they would want to do?

{text input for: reader2action2}

And now that they've managed to complete {reader2action2} what is the next thing?

{text input for: reader2action3}

Great! Now you have the three main things that a reader like {readerName2} might want to do, [[go back->Why do they read the docs?]] and do the same for {readerName3} and {readerName1}.
Or, if you're done, move on to [[Writing for your readers->Writing for your readers]]


:: Reader Three
reader3action1: 'Understand all the advanced features'
reader3action2: 'Switch from hosted services to local'
reader3action3: 'Shut down the reactor quickly during a meltdown'
--

To understand {readerName3}, let's start by thinking about how they might begin.
What is the very first thing that {readerName3} might want to do?

{text input for: reader3action1}

Now let's assume that {readerName3} manages to complete {reader3action1} without any trouble.
What would be the second thing that they would want to do?

{text input for: reader3action2}

And now that they've managed to complete {reader3action2} what is the next thing?

{text input for: reader3action3}

Great! Now you have the three main things that a reader like {readerName3} might want to do, [[go back->Why do they read the docs?]] and do the same for {readerName2} and {readerName1}.
Or, if you're done, move on to [[Writing for your readers->Writing for your readers]]


:: Writing for your readers
critpath1:''
critpath2:''
critpath3:''
critpath4:''
critpath5:''
critpath6:''
critpath7:''
critpath8:''
critpath9:''
critpath10:''
critpath11:''
critpath12:''
critpath13:''
critpath14:''
critpath15:''
critpath16:''
critpath17:''
critpath18:''
critpath19:''
critpath20:''
critpath21:''
critpath22:''
critpath23:''
critpath24:''
critpath25:''
critpath26:''
critpath27:''
reader1action1critscore: critpath1 + critpath2 + critpath3
reader1action2critscore: critpath4 + critpath5 + critpath6
reader1action3critscore: critpath7 + critpath8 + critpath9
reader2action1critscore: critpath10 + critpath11 + critpath12
reader2action2critscore: critpath13 + critpath14 + critpath15
reader2action3critscore: critpath16 + critpath17 + critpath18
reader3action1critscore: critpath19 + critpath20 + critpath21
reader3action2critscore: critpath22 + critpath23 + critpath24
reader3action3critscore: critpath25 + critpath26 + critpath27
--

Now that you've had a think about who your readers are, and the kinds of things they might be using your documentation for, you can display them in a table like this:

<table>
    <tr>
        <th>Task</th>
        <th>{readerName1}</th>
        <th>{readerName2}</th>
        <th>{readerName3}</th>
        <th>Total Critical Path Score</th>
    </tr>
    <tr>
        <td>{reader1action1}</td>
        <td>{text input for: 'critpath1'}</td>
        <td>{text input for: 'critpath2'}</td>
        <td>{text input for: 'critpath3'}</td>
        <td>{reader1action1critscore}</td>
    </tr>
    <tr>
        <td>{reader1action2}</td>
        <td>{text input for: 'critpath4'}</td>
        <td>{text input for: 'critpath5'}</td>
        <td>{text input for: 'critpath6'}</td>
        <td>{reader1action2critscore}</td>
    </tr>
    <tr>
        <td>{reader1action3}</td>
        <td>{text input for: 'critpath7'}</td>
        <td>{text input for: 'critpath8'}</td>
        <td>{text input for: 'critpath9'}</td>
        <td>{reader1action3critscore}</td>
    </tr>
    <tr>
        <td>{reader2action1}</td>
        <td>{text input for: 'critpath10'}</td>
        <td>{text input for: 'critpath11'}</td>
        <td>{text input for: 'critpath12'}</td>
        <td>{reader2action1critscore}</td>
    </tr>
    <tr>
        <td>{reader2action2}</td>
        <td>{text input for: 'critpath13'}</td>
        <td>{text input for: 'critpath14'}</td>
        <td>{text input for: 'critpath15'}</td>
        <td>{reader2action2critscore}</td>
    </tr>
    <tr>
        <td>{reader2action3}</td>
        <td>{text input for: 'critpath16'}</td>
        <td>{text input for: 'critpath17'}</td>
        <td>{text input for: 'critpath18'}</td>
        <td>{reader2action3critscore}</td>
    </tr>
    <tr>
        <td>{reader3action1}</td>
        <td>{text input for: 'critpath19'}</td>
        <td>{text input for: 'critpath20'}</td>
        <td>{text input for: 'critpath21'}</td>
        <td>{reader3action1critscore}</td>
    </tr>
    <tr>
        <td>{reader3action2}</td>
        <td>{text input for: 'critpath22'}</td>
        <td>{text input for: 'critpath23'}</td>
        <td>{text input for: 'critpath24'}</td>
        <td>{reader3action2critscore}</td>
    </tr>
    <tr>
        <td>{reader3action3}</td>
        <td>{text input for: 'critpath25'}</td>
        <td>{text input for: 'critpath26'}</td>
        <td>{text input for: 'critpath27'}</td>
        <td>{reader3action3critscore}</td>
    </tr>
</table>

Now you just need to fill in the blank spaces!
Consider how likely the reader is to use the documentation to complete each task.
Score a **1** for a low likelihood, **2** for a medium likelihood, and **3** for a high likelihood.

**Curse of Knowledge alert!!**
Remember that this isn't how likely the reader is to do the task.
It's how likely the reader is to *use the documentation* to do the task.
A really experienced reader is not likely to need to the documentation for basic tasks like installation or setup, but they might need it for more advanced tasks.

When you have the numbers in, add up each row.
The rows that score the highest are what writers like to call *critical paths*.
Now you know what your critical paths are, you are ready to [[Identify the mess]]


:: Identify the mess

Energistically recaptiualize distributed ideas and client-based vortals. Continually orchestrate superior methods of empowerment and 24/7 mindshare. Conveniently iterate transparent internal or "organic" sources vis-a-vis cost effective leadership. Assertively orchestrate principle-centered potentialities whereas interactive internal or "organic" sources. Authoritatively underwhelm next-generation synergy whereas highly efficient infomediaries.

## State your intent

Phosfluorescently transform global best practices with extensive action items. Uniquely incentivize 24/365 sources without cost effective ROI. Monotonectally envisioneer world-class ideas through end-to-end content. Compellingly supply dynamic web services vis-a-vis impactful web-readiness. Holisticly morph transparent systems without cooperative e-tailers.



## Face reality

Compellingly target resource sucking systems and long-term high-impact synergy. Continually revolutionize cutting-edge paradigms and multidisciplinary action items. Assertively incentivize empowered e-services without standards compliant leadership skills. Competently create sticky human capital rather than accurate scenarios. Credibly leverage other's covalent metrics via multimedia based imperatives.



## Choose a direction

Dramatically iterate future-proof relationships rather than sticky action items. Holisticly plagiarize maintainable intellectual capital after 24/365 outsourcing. Monotonectally mesh out-of-the-box niches with alternative infomediaries. Holisticly communicate extensible mindshare for ubiquitous imperatives. Credibly embrace interactive sources and multifunctional methods of empowerment.


## Measure the distance

Globally plagiarize intuitive e-services without standards compliant e-markets. Energistically maintain backward-compatible platforms without cross functional scenarios. Collaboratively actualize goal-oriented users and transparent convergence. Enthusiastically restore low-risk high-yield communities whereas intuitive initiatives. Professionally visualize ethical information before next-generation materials.

## Play with structure

Interactively enhance customized channels without top-line niches. Enthusiastically morph prospective models before one-to-one opportunities. Credibly utilize empowered products through tactical leadership skills. Dynamically fabricate quality data for an expanded array of technologies. Progressively target robust experiences whereas synergistic ROI.



## Prepare to adjust

Collaboratively enable parallel opportunities with visionary web-readiness. Proactively restore cross-media processes rather than cross-platform experiences. Dramatically synergize best-of-breed leadership skills vis-a-vis front-end products. Monotonectally productize highly efficient channels with 24/7 infomediaries. Intrinsicly fashion economically sound methods of empowerment after strategic infrastructures.


## Further Reading

Competently engineer next-generation services through plug-and-play experiences. Interactively formulate functional synergy before plug-and-play leadership. Monotonectally whiteboard bricks-and-clicks mindshare before seamless meta-services. Synergistically harness client-centered potentialities for performance based schemas. Holisticly parallel task business e-markets with ubiquitous niche markets.
